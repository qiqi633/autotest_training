{"status": "broken", "attachments": [{"source": "e160867c-6f15-4e51-9b97-149d24251282-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "968a1677-12a0-40fc-b4d5-22323e70e348-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "0d37b037-4f83-438c-b1d8-ae33af6721fa-attachment.txt", "type": "text/plain", "name": "stderr"}], "parameters": [{"name": "testcase", "value": "'num_username'"}, {"name": "params", "value": "{'j_password': '0117151026imok', 'j_username': 21312312312L, 'from': '/', 'Submit': 'Sign in'}"}], "labels": [{"name": "parentSuite", "value": "Interface test"}, {"name": "suite", "value": "jenkins_login"}, {"name": "subSuite", "value": "Post_jenkins"}, {"name": "host", "value": "windows10"}, {"name": "thread", "value": "36964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "Interface test.jenkins_login"}], "stop": 1552138706290, "uuid": "c06bb482-ca84-40c2-9f1e-9b4b63a452a6", "historyId": "cc048b05428f29dfebabd96de1388ac5", "start": 1552138706271, "fullName": "Interface test.jenkins_login.Post_jenkins#post_send[num_username-{'j_password': '0117151026imo...]", "statusDetails": {"message": "ValueError: No JSON object could be decoded", "trace": "self = <jenkins_login.Post_jenkins instance at 0x04666800>\ntestcase = 'num_username'\nparams = {'Submit': 'Sign in', 'from': '/', 'j_password': '0117151026imok', 'j_username': 21312312312L}\n\n    @pytest.mark.parametrize('testcase, params',get_dir_para())\n    def post_send(self,testcase,params):\n        p_send = requests.post(self.url,params)\n>       res = p_send.json()\n\njenkins_login.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\python27\\lib\\site-packages\\requests\\models.py:896: in json\n    return complexjson.loads(self.text, **kwargs)\nc:\\python27\\lib\\json\\__init__.py:339: in loads\n    return _default_decoder.decode(s)\nc:\\python27\\lib\\json\\decoder.py:364: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x03D97590>\ns = '\n    \n    \n  \n  \n  <!DOCTYPE html><html lang=\"zh-CN\"><head resURL=\"/static/bf3adf2c\" data-rooturl=\"\" data-resurl=\"/st...class=\"Checkbox-text\">Keep me signed in</div></label></div></form><div class=\"footer\"></div></div></div></body></html>'\nidx = 19\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` or ``unicode``\n        beginning with a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration:\n>           raise ValueError(\"No JSON object could be decoded\")\nE           ValueError: No JSON object could be decoded\n\nc:\\python27\\lib\\json\\decoder.py:382: ValueError"}, "name": "post_send[num_username-{'j_password': '0117151026imo...]"}