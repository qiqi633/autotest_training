{"status": "broken", "attachments": [{"source": "b425418a-cab8-4944-8d89-3fee62d07190-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "11787684-4b00-4579-bf71-d74ecdd267ac-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "06efbbc6-5571-4804-88ce-bde746563c14-attachment.txt", "type": "text/plain", "name": "stderr"}], "parameters": [{"name": "testcase", "value": "'none_username'"}, {"name": "params", "value": "{'wrong_username': {'username': None, 'pwd': '0117151026imok', 'from': '/', 'submit': 'Sign in'}, 'characters': {'username': 'qiqi$%^', 'pwd': '0117151026^&*&', 'from': '/', 'submit': 'Sign in'}, 'num_username': {'username': 21312312312L, 'pwd': '0117151026imok', 'from': '/', 'submit': 'Sign in'}, 'wrong_pwd': {'username': 'qiqi', 'pwd': 20763158, 'from': '/', 'submit': 'Sign in'}, 'long_username': {'username': 'sdfsdfsfsfdssdfsdf', 'pwd': '0117151026imok', 'from': '/', 'submit': 'Sign in'}, 'none_pwd': {'username': 'qiqi', 'pwd': None, 'from': '/', 'submit': 'Sign in'}}"}], "labels": [{"name": "parentSuite", "value": "Interface test"}, {"name": "suite", "value": "jenkins_login"}, {"name": "subSuite", "value": "Post_jenkins"}, {"name": "host", "value": "windows10"}, {"name": "thread", "value": "31416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "Interface test.jenkins_login"}], "stop": 1552134139674, "uuid": "fccc7452-4933-469b-a260-ff70534e7fc2", "historyId": "4a71a8f2a2cbe043c9a796b4f48f0aa4", "start": 1552134139659, "fullName": "Interface test.jenkins_login.Post_jenkins#post_send[none_username-{'wrong_username': {'username...]", "statusDetails": {"message": "ValueError: No JSON object could be decoded", "trace": "self = <jenkins_login.Post_jenkins instance at 0x04480C10>\ntestcase = 'none_username'\nparams = {'characters': {'from': '/', 'pwd': '0117151026^&*&', 'submit': 'Sign in', 'username': 'qiqi$%^'}, 'long_username': {'...': 'qiqi'}, 'num_username': {'from': '/', 'pwd': '0117151026imok', 'submit': 'Sign in', 'username': 21312312312L}, ...}\n\n    @pytest.mark.parametrize('testcase, params',get_dir_para())\n    def post_send(self,testcase,params):\n        p_send = requests.post(self.url,params)\n>       res = p_send.json()\n\njenkins_login.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\python27\\lib\\site-packages\\requests\\models.py:896: in json\n    return complexjson.loads(self.text, **kwargs)\nc:\\python27\\lib\\json\\__init__.py:339: in loads\n    return _default_decoder.decode(s)\nc:\\python27\\lib\\json\\decoder.py:364: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x03C03590>\ns = '<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\n<title>Error 403 No valid crumb was... request</pre></p><hr><a href=\"http://eclipse.org/jetty\">Powered by Jetty:// 9.4.z-SNAPSHOT</a><hr/>\n\n</body>\n</html>\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` or ``unicode``\n        beginning with a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration:\n>           raise ValueError(\"No JSON object could be decoded\")\nE           ValueError: No JSON object could be decoded\n\nc:\\python27\\lib\\json\\decoder.py:382: ValueError"}, "name": "post_send[none_username-{'wrong_username': {'username...]"}