{"status": "broken", "attachments": [{"source": "1f8d01fb-b3bd-4d2a-a73b-846609ddebf8-attachment.txt", "type": "text/plain", "name": "log"}, {"source": "4154b824-df0e-476e-b73e-c747f62f06ad-attachment.txt", "type": "text/plain", "name": "stdout"}, {"source": "bffe7aa8-44a1-4235-9d84-99ef5ad15b09-attachment.txt", "type": "text/plain", "name": "stderr"}], "parameters": [{"name": "testcase", "value": "'characters'"}, {"name": "params", "value": "{'j_password': '0117151026^&*&', 'j_username': 'qiqi$%^', 'from': '/', 'Submit': 'Sign in'}"}], "labels": [{"name": "parentSuite", "value": "Interface test"}, {"name": "suite", "value": "jenkins_login"}, {"name": "subSuite", "value": "Post_jenkins"}, {"name": "host", "value": "windows10"}, {"name": "thread", "value": "35120-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython2"}, {"name": "package", "value": "Interface test.jenkins_login"}], "stop": 1552138435048, "uuid": "898d463e-669f-4b92-83b3-3ca135e2bdbf", "historyId": "1cfe21b18cbc67299e9551c16cff7c0c", "start": 1552138435030, "fullName": "Interface test.jenkins_login.Post_jenkins#post_send[characters-{'j_password': '0117151026^&*...]", "statusDetails": {"message": "TypeError: <Response [401]> is not JSON serializable", "trace": "self = <jenkins_login.Post_jenkins instance at 0x0481CB48>\ntestcase = 'characters'\nparams = {'Submit': 'Sign in', 'from': '/', 'j_password': '0117151026^&*&', 'j_username': 'qiqi$%^'}\n\n    @pytest.mark.parametrize('testcase, params',get_dir_para())\n    def post_send(self,testcase,params):\n        p_send = requests.post(self.url,params)\n        with io.open('./jenkins_test_result.json','a+') as f:\n>           json.dump(p_send,f)\n\njenkins_login.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nc:\\python27\\lib\\json\\__init__.py:189: in dump\n    for chunk in iterable:\nc:\\python27\\lib\\json\\encoder.py:442: in _iterencode\n    o = _default(o)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.encoder.JSONEncoder object at 0x03DE3110>, o = <Response [401]>\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(repr(o) + \" is not JSON serializable\")\nE       TypeError: <Response [401]> is not JSON serializable\n\nc:\\python27\\lib\\json\\encoder.py:184: TypeError"}, "name": "post_send[characters-{'j_password': '0117151026^&*...]"}