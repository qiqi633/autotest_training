{"name": "test_fun[search_004-None]", "status": "broken", "statusDetails": {"message": "TypeError: object of type 'NoneType' has no len()", "trace": "self = <test_yaml.yaml_achieve.search object at 0x00000207EBA33DA0>, test_case_name = 'search_004', test_case_value = None\n\n    @pytest.mark.parametrize('test_case_name,test_case_value',get_data())\n    def test_fun(self,test_case_name,test_case_value):\n        self.obj.click_search_btn()\n        print(\"test case num :{0},test case value :{1}\".format(test_case_name,test_case_value))\n>       self.obj.search_input(test_case_value)\n\ntest_yaml\\yaml_achieve.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_yaml\\page_search.py:13: in search_input\n    self.obj.input_element(test_yaml.search_btn,text)\nBase\\Base.py:28: in input_element\n    self.find_element_x(loc).send_keys(text)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:473: in send_keys\n    local_file = self.parent.file_detector.is_local_file(*value)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\file_detector.py:48: in is_local_file\n    file_path = ''.join(keys_to_typing(keys))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nvalue = (None,)\n\n    def keys_to_typing(value):\n        \"\"\"Processes the values that will be typed in the element.\"\"\"\n        typing = []\n        for val in value:\n            if isinstance(val, Keys):\n                typing.append(val)\n            elif isinstance(val, int):\n                val = str(val)\n                for i in range(len(val)):\n                    typing.append(val[i])\n            else:\n>               for i in range(len(val)):\nE               TypeError: object of type 'NoneType' has no len()\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\common\\utils.py:150: TypeError"}, "attachments": [{"name": "log", "source": "f7a4365f-5ea5-4071-8c81-c260b1068d3c-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "41d547c0-680b-4966-b60a-a43cab9ac60c-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "16988fe2-3617-48cc-9391-00c8d80f8fe8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_case_name", "value": "'search_004'"}, {"name": "test_case_value", "value": "None"}], "start": 1551621976216, "stop": 1551621977666, "uuid": "ceadc030-5501-4912-90a1-910e02ad0798", "historyId": "61102d630b8060d7ece227aa589f4526", "fullName": "test_yaml.yaml_achieve.search#test_fun[search_004-None]", "labels": [{"name": "parentSuite", "value": "test_yaml"}, {"name": "suite", "value": "yaml_achieve"}, {"name": "subSuite", "value": "search"}, {"name": "host", "value": "handongqi-PC"}, {"name": "thread", "value": "10136-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_yaml.yaml_achieve"}]}